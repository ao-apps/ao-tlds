<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-tlds - Self-updating Java API to get top-level domains.
Copyright (C) 2016, 2017, 2018, 2019, 2020  AO Industries, Inc.
	support@aoindustries.com
	7262 Bull Pen Cir
	Mobile, AL 36695

This file is part of ao-tlds.

ao-tlds is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-tlds is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-tlds.  If not, see <http://www.gnu.org/licenses />.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.aoindustries</groupId><artifactId>ao-oss-parent</artifactId><version>1.7.0-SNAPSHOT</version>
		<relativePath>../ao-oss-parent/pom.xml</relativePath>
	</parent>

	<groupId>com.aoindustries</groupId><artifactId>ao-tlds</artifactId><version>1.1.3-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>AO TLDs</name>
	<url>https://aoindustries.com/ao-tlds/</url>
	<description>Self-updating Java API to get top-level domains.</description>
	<inceptionYear>2016</inceptionYear>

	<scm>
		<!-- Can't inherit due to multi-module -->
		<connection>scm:git:git://github.com/aoindustries/ao-tlds.git</connection>
		<developerConnection>scm:git:git@github.com:aoindustries/ao-tlds.git</developerConnection>
		<url>https://github.com/aoindustries/ao-tlds</url>
		<tag>HEAD</tag>
	</scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId><artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>sql-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/sql</directory>
								</resource>
							</resources>
							<outputDirectory>${project.build.directory}/sql</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classesDirectory>${project.build.directory}/sql</classesDirectory>
							<!-- Could pull directly from source, without above sql-resources,
							     but this seems to match Maven style better:
							<classesDirectory>src/main/sql</classesDirectory>
							-->
							<classifier>sql</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- Test -->
			<dependency>
				<groupId>junit</groupId><artifactId>junit</artifactId><version>4.13</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- Test -->
			<groupId>junit</groupId><artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
